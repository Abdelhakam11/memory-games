{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elewa\\\\Desktop\\\\memory game\\\\memory\\\\src\\\\components\\\\Cards\\\\Cards.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Cards.styles.css';\nimport Card from '../Card/Card.component';\nimport Result from '../Result/Result.component';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { incrementBadMoves, incrementTotalMoves } from '../../redux/movesSlice';\nimport EndPage from '../EndPage/EndPage.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  const {\n    totalMoves\n  } = useSelector(state => state.movesSlice);\n  let [cards, setCards] = useState([]);\n  let [play, setPlay] = useState(false);\n  useEffect(() => {\n    getCards();\n    checkEnd();\n  }, []);\n  useEffect(() => {\n    checkEnd();\n  }, [totalMoves]);\n\n  // get all elements which user complete them\n  const finishedCards = function () {\n    return Array.from(document.querySelector('[display=none]'));\n  };\n  const checkEnd = function () {\n    if (cards.length === finishedCards().le) {\n      setPlay(true);\n    } else {\n      setEnd(false);\n    }\n  };\n\n  //use it to random cards\n  const sortRandomly = array => array.sort(() => Math.random() - 0.5);\n  const cardsHandle = cards => {\n    // limit number of shapes\n    let limitedCards = cards.slice(4);\n    //duplicate my cards\n    limitedCards.push(...limitedCards);\n    //sort my data randomly\n    let myRandomData = sortRandomly(limitedCards);\n    //store my data\n    setCards(myRandomData);\n  };\n  const getCards = async function () {\n    try {\n      const {\n        data\n      } = await axios.get('https://jsonplaceholder.typicode.com/users');\n      cardsHandle(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //logic for games\n\n  const dispatch = useDispatch();\n  //check card position and rotate it\n  const flipCard = function (e) {\n    dispatch(incrementTotalMoves());\n    const layerCard = e.target.parentElement;\n    const innerCard = layerCard.parentElement;\n    if (layerCard.classList.value === 'flip-card-front') {\n      if (innerCard.classList.contains('rotate-360')) {\n        innerCard.classList.remove(\"rotate-360\");\n        dispatch(incrementBadMoves());\n      } else {\n        innerCard.classList.remove(\"rotate-0\");\n      }\n      innerCard.classList.add(\"rotate-180\");\n    } else {\n      innerCard.classList.remove(\"rotate-180\");\n      innerCard.classList.add(\"rotate-360\");\n    }\n  };\n\n  // get all elements at position 180 in y direction\n  const allRotateCards = function () {\n    return Array.from(document.getElementsByClassName('rotate-180'));\n  };\n  const checkMatching = function (cards) {\n    if (cards.length === 2) {\n      if (cards[0].id === cards[1].id) {\n        setTimeout(function () {\n          cards.map(card => card.classList.add(\"display-none\"));\n        }, 500);\n      }\n      setTimeout(function () {\n        cards.map(card => card.classList.remove(\"rotate-180\"));\n        cards.map(card => card.classList.add(\"rotate-360\"));\n      }, 1000);\n    }\n  };\n  const cardHandle = function (e) {\n    flipCard(e);\n    let cards = allRotateCards();\n    checkMatching(cards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: [console.log('render'), /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), end === false ? cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n      cardHandle: cardHandle,\n      index: index,\n      ...card\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 38\n    }, this)) : /*#__PURE__*/_jsxDEV(EndPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"zPFB+gxwB3XrfNAMAruHYOWgqPY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","Result","useDispatch","useSelector","incrementBadMoves","incrementTotalMoves","EndPage","jsxDEV","_jsxDEV","Cards","_s","totalMoves","state","movesSlice","cards","setCards","play","setPlay","getCards","checkEnd","finishedCards","Array","from","document","querySelector","length","le","setEnd","sortRandomly","array","sort","Math","random","cardsHandle","limitedCards","slice","push","myRandomData","data","get","error","console","log","dispatch","flipCard","e","layerCard","target","parentElement","innerCard","classList","value","contains","remove","add","allRotateCards","getElementsByClassName","checkMatching","id","setTimeout","map","card","cardHandle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","end","index","_c","$RefreshReg$"],"sources":["C:/Users/elewa/Desktop/memory game/memory/src/components/Cards/Cards.component.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Cards.styles.css';\r\nimport Card from '../Card/Card.component';\r\nimport Result from '../Result/Result.component';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { incrementBadMoves ,incrementTotalMoves} from '../../redux/movesSlice';\r\nimport EndPage from '../EndPage/EndPage.component';\r\n\r\n\r\nexport default function Cards() {\r\n    const {totalMoves} = useSelector((state) => state.movesSlice)\r\n    let [cards,setCards]=useState([]);\r\n    let [play,setPlay]=useState(false);\r\n    \r\n\r\n    useEffect(()=>{\r\n        getCards()\r\n        checkEnd()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        checkEnd()\r\n    },[totalMoves])\r\n\r\n    // get all elements which user complete them\r\n    const finishedCards=function (){\r\n        return Array.from(\r\n            document.querySelector('[display=none]')\r\n        );  \r\n    }\r\n\r\n    const checkEnd=function(){\r\n        if(cards.length===finishedCards().le){\r\n            setPlay(true)\r\n        }else{\r\n            setEnd(false)\r\n        }\r\n    }\r\n\r\n    //use it to random cards\r\n    const sortRandomly = (array) => array.sort(() => Math.random() - 0.5);\r\n    \r\n    const cardsHandle=(cards)=>{\r\n        // limit number of shapes\r\n        let limitedCards=cards.slice(4)\r\n        //duplicate my cards\r\n        limitedCards.push(...limitedCards)\r\n        //sort my data randomly\r\n        let myRandomData=sortRandomly(limitedCards);\r\n        //store my data\r\n        setCards(myRandomData);\r\n    }\r\n    const getCards=async function () {\r\n        try{\r\n            const {data}=await axios.get('https://jsonplaceholder.typicode.com/users');\r\n            cardsHandle(data)\r\n        }catch (error) {\r\n            console.log(error);\r\n          }\r\n        \r\n    }\r\n\r\n\r\n    //logic for games\r\n  \r\n    const dispatch= useDispatch()\r\n    //check card position and rotate it\r\n    const flipCard = function (e){\r\n        dispatch(incrementTotalMoves())\r\n        const layerCard=e.target.parentElement;\r\n        const innerCard=layerCard.parentElement;\r\n\r\n        if(layerCard.classList.value==='flip-card-front'){\r\n            if(innerCard.classList.contains('rotate-360')){\r\n                innerCard.classList.remove(\"rotate-360\")\r\n                dispatch(incrementBadMoves())\r\n            }else{\r\n                innerCard.classList.remove(\"rotate-0\")\r\n            }\r\n            innerCard.classList.add(\"rotate-180\")\r\n        }else{\r\n            innerCard.classList.remove(\"rotate-180\")\r\n            innerCard.classList.add(\"rotate-360\") \r\n        }\r\n        \r\n    }\r\n    \r\n    // get all elements at position 180 in y direction\r\n    const allRotateCards=function (){\r\n        return Array.from(\r\n            document.getElementsByClassName('rotate-180')\r\n        );  \r\n    }\r\n    \r\n    const checkMatching=function (cards){\r\n        if(cards.length === 2){\r\n\r\n            if(cards[0].id === cards[1].id){\r\n                setTimeout(function(){\r\n                    cards.map((card)=>card.classList.add(\"display-none\"))\r\n                }, 500);\r\n            }\r\n\r\n            setTimeout(function(){\r\n                cards.map((card)=>card.classList.remove(\"rotate-180\"))\r\n                cards.map((card)=>card.classList.add(\"rotate-360\"))\r\n            }, 1000);\r\n        }\r\n    }\r\n       \r\n    const cardHandle =  function(e){\r\n        flipCard(e);\r\n        let cards=   allRotateCards();\r\n        checkMatching(cards)\r\n    }\r\n  return (\r\n    <div className=\"cards\">\r\n        {console.log('render')}\r\n        <Result/>\r\n        {   end ===false?\r\n            cards.map((card,index)=> <Card cardHandle={cardHandle} index={index} key={index} {...card} />)\r\n            :<EndPage />\r\n        }\r\n        \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}