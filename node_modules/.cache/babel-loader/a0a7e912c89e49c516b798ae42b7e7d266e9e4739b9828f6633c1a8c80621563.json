{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const movesSlice = createSlice({\n  name: 'moves',\n  initialState: {\n    appearCards: [],\n    totalMoves: 0\n  },\n  reducers: {\n    incrementTotalMoves: state => {\n      state.totalMoves += 1;\n    },\n    flipCard: (state, action) => {\n      console.log(action.payload);\n      const layerCard = action.payload.e.target.parentElement;\n      const innerCard = layerCard.parentElement;\n      if (layerCard.classList.value === 'flip-card-front') {\n        innerCard.classList.remove(\"rotate-0\");\n        innerCard.classList.add(\"rotate-180\");\n        const addCards = [...state.appearCards];\n        add;\n        state.appearCards.push(action.payload.id);\n        console.log(state.appearCards);\n      } else {\n        innerCard.classList.remove(\"rotate-180\");\n        innerCard.classList.add(\"rotate-0\");\n      }\n    }\n  }\n});\nexport const {\n  incrementTotalMoves,\n  flipCard\n} = movesSlice.actions;\nexport default movesSlice.reducer;","map":{"version":3,"names":["createSlice","movesSlice","name","initialState","appearCards","totalMoves","reducers","incrementTotalMoves","state","flipCard","action","console","log","payload","layerCard","e","target","parentElement","innerCard","classList","value","remove","add","addCards","push","id","actions","reducer"],"sources":["C:/Users/elewa/Desktop/memory game/memory/src/redux/movesSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nexport const movesSlice = createSlice({\r\n  name: 'moves',\r\n  initialState: {\r\n    appearCards:[],\r\n    totalMoves:0,\r\n  },\r\n  reducers: {\r\n    \r\n    incrementTotalMoves: (state) => {\r\n        state.totalMoves += 1\r\n    },\r\n    flipCard:(state,action) => {\r\n      console.log(action.payload);\r\n      const layerCard=action.payload.e.target.parentElement;\r\n      const innerCard=layerCard.parentElement;\r\n      if(layerCard.classList.value==='flip-card-front'){\r\n            innerCard.classList.remove(\"rotate-0\")\r\n            innerCard.classList.add(\"rotate-180\")\r\n            const addCards = [...state.appearCards]\r\n            add\r\n            state.appearCards.push(action.payload.id)\r\n            console.log(state.appearCards);  \r\n      }else{\r\n        innerCard.classList.remove(\"rotate-180\")\r\n        innerCard.classList.add(\"rotate-0\") \r\n      } \r\n    },\r\n\r\n  },\r\n})\r\nexport const {  incrementTotalMoves,flipCard } = movesSlice.actions\r\nexport default movesSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,WAAW,EAAC,EAAE;IACdC,UAAU,EAAC;EACb,CAAC;EACDC,QAAQ,EAAE;IAERC,mBAAmB,EAAGC,KAAK,IAAK;MAC5BA,KAAK,CAACH,UAAU,IAAI,CAAC;IACzB,CAAC;IACDI,QAAQ,EAACA,CAACD,KAAK,EAACE,MAAM,KAAK;MACzBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;MAC3B,MAAMC,SAAS,GAACJ,MAAM,CAACG,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,aAAa;MACrD,MAAMC,SAAS,GAACJ,SAAS,CAACG,aAAa;MACvC,IAAGH,SAAS,CAACK,SAAS,CAACC,KAAK,KAAG,iBAAiB,EAAC;QAC3CF,SAAS,CAACC,SAAS,CAACE,MAAM,CAAC,UAAU,CAAC;QACtCH,SAAS,CAACC,SAAS,CAACG,GAAG,CAAC,YAAY,CAAC;QACrC,MAAMC,QAAQ,GAAG,CAAC,GAAGf,KAAK,CAACJ,WAAW,CAAC;QACvCkB,GAAG;QACHd,KAAK,CAACJ,WAAW,CAACoB,IAAI,CAACd,MAAM,CAACG,OAAO,CAACY,EAAE,CAAC;QACzCd,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACJ,WAAW,CAAC;MACpC,CAAC,MAAI;QACHc,SAAS,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;QACxCH,SAAS,CAACC,SAAS,CAACG,GAAG,CAAC,UAAU,CAAC;MACrC;IACF;EAEF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAGf,mBAAmB;EAACE;AAAS,CAAC,GAAGR,UAAU,CAACyB,OAAO;AACnE,eAAezB,UAAU,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}