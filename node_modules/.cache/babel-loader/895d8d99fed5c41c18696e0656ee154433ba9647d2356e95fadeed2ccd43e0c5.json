{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elewa\\\\Desktop\\\\memory game\\\\memory\\\\src\\\\components\\\\Result\\\\Result.component.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Result.styles.css';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Result() {\n  _s();\n  const {\n    totalMoves,\n    badMoves\n  } = useSelector(state => state.movesSlice);\n  let prec = (totalMoves - badMoves) / totalMoves * 100;\n  console.log(prec);\n  if (prec > 100) {\n    prec = 100;\n  } else if (prec === NaN) {\n    prec = 0;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bottom-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"bottom-bar-element\",\n          children: [\"Total Moves: \", totalMoves]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"bottom-bar-element\",\n          children: [\"Bad Moves: \", badMoves]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"bottom-bar-element\",\n          children: [\"precentage: \", prec, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"bottom-bar-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Result, \"MFvWU9KHqghHdImEsk4amomCohA=\", false, function () {\n  return [useSelector];\n});\n_c = Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useSelector","jsxDEV","_jsxDEV","Result","_s","totalMoves","badMoves","state","movesSlice","prec","console","log","NaN","className","children","class","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elewa/Desktop/memory game/memory/src/components/Result/Result.component.jsx"],"sourcesContent":["import React from 'react';\r\nimport './Result.styles.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport default function Result() {\r\n    const {totalMoves,badMoves} = useSelector((state) => state.movesSlice)\r\n    let prec = (totalMoves-badMoves)/totalMoves*100;\r\n    console.log(prec);\r\n    if(prec>100){\r\n        prec=100\r\n    }else if(prec === NaN){\r\n        prec=0\r\n    }\r\n  return (\r\n    <div  className='result'>\r\n        <div class=\"wrapper\">\r\n            <div id=\"bottom-bar\">\r\n                <div class=\"bottom-bar-element\">\r\n                    Total Moves: {totalMoves}\r\n                </div>\r\n                <div class=\"bottom-bar-element\">\r\n                    Bad Moves: {badMoves}                    \r\n                </div>\r\n                <div class=\"bottom-bar-element\">\r\n                    precentage: {prec}% \r\n                </div>\r\n                <div class=\"bottom-bar-element\">\r\n                \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n        \r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAC5B,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM;IAACC,UAAU;IAACC;EAAQ,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,UAAU,CAAC;EACtE,IAAIC,IAAI,GAAG,CAACJ,UAAU,GAACC,QAAQ,IAAED,UAAU,GAAC,GAAG;EAC/CK,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,IAAGA,IAAI,GAAC,GAAG,EAAC;IACRA,IAAI,GAAC,GAAG;EACZ,CAAC,MAAK,IAAGA,IAAI,KAAKG,GAAG,EAAC;IAClBH,IAAI,GAAC,CAAC;EACV;EACF,oBACEP,OAAA;IAAMW,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACpBZ,OAAA;MAAKa,KAAK,EAAC,SAAS;MAAAD,QAAA,eAChBZ,OAAA;QAAKc,EAAE,EAAC,YAAY;QAAAF,QAAA,gBAChBZ,OAAA;UAAKa,KAAK,EAAC,oBAAoB;UAAAD,QAAA,GAAC,eACf,EAACT,UAAU;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACNlB,OAAA;UAAKa,KAAK,EAAC,oBAAoB;UAAAD,QAAA,GAAC,aACjB,EAACR,QAAQ;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACNlB,OAAA;UAAKa,KAAK,EAAC,oBAAoB;UAAAD,QAAA,GAAC,cAChB,EAACL,IAAI,EAAC,GACtB;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNlB,OAAA;UAAKa,KAAK,EAAC;QAAoB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAG1B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAChB,EAAA,CA9BuBD,MAAM;EAAA,QACIH,WAAW;AAAA;AAAAqB,EAAA,GADrBlB,MAAM;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}