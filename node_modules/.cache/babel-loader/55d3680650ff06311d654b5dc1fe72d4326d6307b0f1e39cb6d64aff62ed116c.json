{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const movesSlice = createSlice({\n  name: 'moves',\n  initialState: {\n    appearCards: [],\n    totalMoves: 0\n  },\n  reducers: {\n    incrementTotalMoves: state => {\n      state.totalMoves += 1;\n    },\n    flipCard: (state, action) => {\n      const layerCard = action.payload.e.target.parentElement;\n      const innerCard = layerCard.parentElement;\n      if (layerCard.classList.value === 'flip-card-front') {\n        if (innerCard.classList.contains('rotate-0')) {\n          innerCard.classList.remove(\"rotate-0\");\n          innerCard.classList.add(\"rotate-180\");\n          a;\n        }\n      } else {\n        innerCard.classList.remove(\"rotate-180\");\n        innerCard.classList.add(\"rotate-360\");\n      }\n    }\n  }\n});\nexport const {\n  incrementTotalMoves\n} = movesSlice.actions;\nexport default movesSlice.reducer;","map":{"version":3,"names":["createSlice","movesSlice","name","initialState","appearCards","totalMoves","reducers","incrementTotalMoves","state","flipCard","action","layerCard","payload","e","target","parentElement","innerCard","classList","value","contains","remove","add","a","actions","reducer"],"sources":["C:/Users/elewa/Desktop/memory game/memory/src/redux/movesSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nexport const movesSlice = createSlice({\r\n  name: 'moves',\r\n  initialState: {\r\n    appearCards:[],\r\n    totalMoves:0,\r\n  },\r\n  reducers: {\r\n    \r\n    incrementTotalMoves: (state) => {\r\n        state.totalMoves += 1\r\n    },flipCard:(state,action) => {\r\n      const layerCard=action.payload.e.target.parentElement;\r\n      const innerCard=layerCard.parentElement;\r\n      if(layerCard.classList.value==='flip-card-front'){\r\n        if(innerCard.classList.contains('rotate-0')){\r\n            innerCard.classList.remove(\"rotate-0\")\r\n            innerCard.classList.add(\"rotate-180\")\r\n            a\r\n        }\r\n        \r\n    }else{\r\n        innerCard.classList.remove(\"rotate-180\")\r\n        innerCard.classList.add(\"rotate-360\") \r\n    } \r\n    }\r\n  },\r\n})\r\nexport const {  incrementTotalMoves } = movesSlice.actions\r\nexport default movesSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,WAAW,EAAC,EAAE;IACdC,UAAU,EAAC;EACb,CAAC;EACDC,QAAQ,EAAE;IAERC,mBAAmB,EAAGC,KAAK,IAAK;MAC5BA,KAAK,CAACH,UAAU,IAAI,CAAC;IACzB,CAAC;IAACI,QAAQ,EAACA,CAACD,KAAK,EAACE,MAAM,KAAK;MAC3B,MAAMC,SAAS,GAACD,MAAM,CAACE,OAAO,CAACC,CAAC,CAACC,MAAM,CAACC,aAAa;MACrD,MAAMC,SAAS,GAACL,SAAS,CAACI,aAAa;MACvC,IAAGJ,SAAS,CAACM,SAAS,CAACC,KAAK,KAAG,iBAAiB,EAAC;QAC/C,IAAGF,SAAS,CAACC,SAAS,CAACE,QAAQ,CAAC,UAAU,CAAC,EAAC;UACxCH,SAAS,CAACC,SAAS,CAACG,MAAM,CAAC,UAAU,CAAC;UACtCJ,SAAS,CAACC,SAAS,CAACI,GAAG,CAAC,YAAY,CAAC;UACrCC,CAAC;QACL;MAEJ,CAAC,MAAI;QACDN,SAAS,CAACC,SAAS,CAACG,MAAM,CAAC,YAAY,CAAC;QACxCJ,SAAS,CAACC,SAAS,CAACI,GAAG,CAAC,YAAY,CAAC;MACzC;IACA;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAGd;AAAoB,CAAC,GAAGN,UAAU,CAACsB,OAAO;AAC1D,eAAetB,UAAU,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}