{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elewa\\\\Desktop\\\\memory game\\\\memory\\\\src\\\\components\\\\Cards\\\\Cards.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Cards.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  let [cards, setCards] = useState([]);\n  let [rotateAngle, setRotateAngle] = useState(0);\n  let [selected, setSelected] = useState([]);\n  useEffect(() => {\n    getCards();\n  }, []);\n\n  //use it to random cards\n  const sortRandomly = array => array.sort(() => Math.random() - 0.5);\n  const cardsHandle = cards => {\n    // limit number of shapes\n    let limitedCards = cards.slice(4);\n    //duplicate my cards\n    limitedCards.push(...limitedCards);\n    //sort my data randomly\n    let myRandomData = sortRandomly(limitedCards);\n    //store my data\n    setCards(myRandomData);\n  };\n  const getCards = async function () {\n    try {\n      const {\n        data\n      } = await axios.get('https://jsonplaceholder.typicode.com/users');\n      cardsHandle(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const flipCard = () => {\n    if (rotateAngle === 0) {\n      setRotateAngle(180);\n    } else {\n      setRotateAngle(0);\n    }\n  };\n  const pushToSelected = id => {\n    if (selected.length < 3) {\n      let addingCart = [...selected].push(id);\n      setSelected(addingCart);\n      console.log(selected);\n    }\n  };\n  const cardHandle = id => {\n    flipCard();\n    pushToSelected(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: cards.map(({\n      id,\n      name\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: rotateAngle === 180 ? 'rotate-180 flip-card-inner' : 'rotate-0 flip-card-inner',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flip-card-front\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flip-card-back\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"card-image\",\n            src: `https://robohash.org/${id}?set=set2`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 43\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"lTkbr4XbZCDjm7VKfV2auHV2gOE=\");\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Cards","_s","cards","setCards","rotateAngle","setRotateAngle","selected","setSelected","getCards","sortRandomly","array","sort","Math","random","cardsHandle","limitedCards","slice","push","myRandomData","data","get","error","console","log","flipCard","pushToSelected","id","length","addingCart","cardHandle","className","children","map","name","index","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["C:/Users/elewa/Desktop/memory game/memory/src/components/Cards/Cards.component.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Cards.styles.css';\r\n\r\n\r\nexport default function Cards() {\r\n    let [cards,setCards]=useState([]);\r\n    let [rotateAngle,setRotateAngle]=useState(0);\r\n    let [selected,setSelected]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        getCards()\r\n    },[])\r\n    \r\n\r\n    //use it to random cards\r\n    const sortRandomly = (array) => array.sort(() => Math.random() - 0.5);\r\n    \r\n    const cardsHandle=(cards)=>{\r\n        // limit number of shapes\r\n        let limitedCards=cards.slice(4)\r\n        //duplicate my cards\r\n        limitedCards.push(...limitedCards)\r\n        //sort my data randomly\r\n        let myRandomData=sortRandomly(limitedCards);\r\n        //store my data\r\n        setCards(myRandomData);\r\n    }\r\n    const getCards=async function () {\r\n        try{\r\n            const {data}=await axios.get('https://jsonplaceholder.typicode.com/users');\r\n            cardsHandle(data)\r\n        }catch (error) {\r\n            console.log(error);\r\n          }\r\n        \r\n    }\r\n\r\n    const flipCard =()=>{\r\n        if(rotateAngle===0){\r\n            setRotateAngle(180);\r\n        }else{\r\n            setRotateAngle(0); \r\n        }\r\n        \r\n    }\r\n    const pushToSelected =(id)=>{\r\n        if(selected.length < 3){\r\n            let addingCart=[...selected].push(id)\r\n            setSelected(addingCart)\r\n            console.log(selected);\r\n        } \r\n    }\r\n    const cardHandle =(id)=>{\r\n        flipCard();\r\n        pushToSelected(id)\r\n    }\r\n\r\n    \r\n  return (\r\n    <div className=\"cards\" >\r\n        {\r\n            cards.map(({id,name},index)=> <div key={index} className=\"card\"  >\r\n            <div  className={ rotateAngle===180? 'rotate-180 flip-card-inner':'rotate-0 flip-card-inner'}>\r\n\r\n                <div className=\"flip-card-front\">\r\n                    <h1>hidden</h1>\r\n                </div>\r\n\r\n                <div className=\"flip-card-back\">\r\n                    <img className='card-image' src={`https://robohash.org/${id}?set=set2`} />\r\n                    <h4>{name}</h4>\r\n                </div>\r\n            </div>\r\n    </div>)\r\n        }\r\n        \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}