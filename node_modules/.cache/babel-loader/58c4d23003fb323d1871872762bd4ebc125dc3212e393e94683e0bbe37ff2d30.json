{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elewa\\\\Desktop\\\\memory game\\\\memory\\\\src\\\\components\\\\Cards\\\\Cards.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Cards.styles.css';\nimport Card from '../Card/Card.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  let [cards, setCards] = useState([]);\n  useEffect(() => {\n    getCards();\n  }, []);\n\n  //use it to random cards\n  const sortRandomly = array => array.sort(() => Math.random() - 0.5);\n  const cardsHandle = cards => {\n    //duplicate my cards\n    cards.push(...cards);\n    //sort my data randomly\n    let myRandomData = sortRandomly(cards);\n    //store my data\n    setCards(myRandomData);\n  };\n  const getCards = async function () {\n    const {\n      data\n    } = await axios.get('https://jsoplaceholder.typicode.com/users').catch(function (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n      console.log(error.config);\n    });\n    cardsHandle(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards-component\",\n    children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n      ...card\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 38\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"mrCWdHvCaUiuDWPDa/9VjhNDyNs=\");\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","jsxDEV","_jsxDEV","Cards","_s","cards","setCards","getCards","sortRandomly","array","sort","Math","random","cardsHandle","push","myRandomData","data","get","catch","error","response","console","log","status","headers","request","message","config","className","children","map","card","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elewa/Desktop/memory game/memory/src/components/Cards/Cards.component.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Cards.styles.css';\r\nimport Card from '../Card/Card.component';\r\n\r\nexport default function Cards() {\r\n    let [cards,setCards]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        getCards()\r\n    },[])\r\n    \r\n\r\n    //use it to random cards\r\n    const sortRandomly = (array) => array.sort(() => Math.random() - 0.5);\r\n    \r\n    const cardsHandle=(cards)=>{\r\n        //duplicate my cards\r\n        cards.push(...cards)\r\n        //sort my data randomly\r\n        let myRandomData=sortRandomly(cards);\r\n        //store my data\r\n        setCards(myRandomData);\r\n    }\r\n    const getCards=async function () {\r\n        const {data}=await axios.get('https://jsoplaceholder.typicode.com/users').catch(function (error) {\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n              } else if (error.request) {\r\n                // The request was made but no response was received\r\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n                // http.ClientRequest in node.js\r\n                console.log(error.request);\r\n              } else {\r\n                // Something happened in setting up the request that triggered an Error\r\n                console.log('Error', error.message);\r\n              }\r\n              console.log(error.config);\r\n        });\r\n        cardsHandle(data)\r\n    }\r\n\r\n  return (\r\n    <div className='cards-component'>\r\n        {\r\n            cards.map((card,index)=> <Card key={index} {...card} />)\r\n        }\r\n        \r\n        \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,OAAOC,IAAI,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,IAAI,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAEjCD,SAAS,CAAC,MAAI;IACVU,QAAQ,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;;EAGL;EACA,MAAMC,YAAY,GAAIC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EAErE,MAAMC,WAAW,GAAER,KAAK,IAAG;IACvB;IACAA,KAAK,CAACS,IAAI,CAAC,GAAGT,KAAK,CAAC;IACpB;IACA,IAAIU,YAAY,GAACP,YAAY,CAACH,KAAK,CAAC;IACpC;IACAC,QAAQ,CAACS,YAAY,CAAC;EAC1B,CAAC;EACD,MAAMR,QAAQ,GAAC,eAAAA,CAAA,EAAkB;IAC7B,MAAM;MAACS;IAAI,CAAC,GAAC,MAAMjB,KAAK,CAACkB,GAAG,CAAC,2CAA2C,CAAC,CAACC,KAAK,CAAC,UAAUC,KAAK,EAAE;MAC7F,IAAIA,KAAK,CAACC,QAAQ,EAAE;QAChBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAAC;QAChCK,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,QAAQ,CAACG,MAAM,CAAC;QAClCF,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,QAAQ,CAACI,OAAO,CAAC;MACrC,CAAC,MAAM,IAAIL,KAAK,CAACM,OAAO,EAAE;QACxB;QACA;QACA;QACAJ,OAAO,CAACC,GAAG,CAACH,KAAK,CAACM,OAAO,CAAC;MAC5B,CAAC,MAAM;QACL;QACAJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,KAAK,CAACO,OAAO,CAAC;MACrC;MACAL,OAAO,CAACC,GAAG,CAACH,KAAK,CAACQ,MAAM,CAAC;IAC/B,CAAC,CAAC;IACFd,WAAW,CAACG,IAAI,CAAC;EACrB,CAAC;EAEH,oBACEd,OAAA;IAAK0B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAExBxB,KAAK,CAACyB,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBAAI9B,OAAA,CAACF,IAAI;MAAA,GAAiB+B;IAAI,GAAfC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAI3D,CAAC;AAEV;AAAChC,EAAA,CAhDuBD,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}