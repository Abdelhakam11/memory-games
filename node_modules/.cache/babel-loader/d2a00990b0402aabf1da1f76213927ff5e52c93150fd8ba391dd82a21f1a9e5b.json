{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elewa\\\\Desktop\\\\memory game\\\\memory\\\\src\\\\components\\\\Card\\\\Card.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Card.styles.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { emptySelected, pushToSelected } from '../../redux/selectedSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card({\n  id,\n  name\n}) {\n  _s();\n  let [rotateAngle, setRotateAngle] = useState(0);\n  const {\n    selected\n  } = useSelector(store => store);\n  const dispatch = useDispatch();\n  const flipCard = () => {\n    if (rotateAngle === 0) {\n      setRotateAngle(180);\n    } else {\n      setRotateAngle(0);\n    }\n  };\n  const allRotateCards = () => {\n    return Array.from(document.getElementsByClassName('rotate-180'));\n  };\n  const checkMatching = selected => {\n    if (selected.length == 2) {\n      allRotateCards.map(card => card.classList.remove(\"rotate-180\"));\n      console.log();\n      console.log(selected);\n      if (selected[0] === selected[1]) {\n        allRotateCards.map(card => card.classList.add(\"display-none\"));\n        dispatch(emptySelected());\n      } else {\n        dispatch(emptySelected());\n      }\n      setRotateAngle(0);\n    }\n  };\n  const cardHandle = id => {\n    flipCard();\n    dispatch(pushToSelected(id));\n    checkMatching(selected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => cardHandle(id),\n      className: rotateAngle === 180 ? 'rotate-180 flip-card-inner' : 'rotate-0 flip-card-inner',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flip-card-front\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flip-card-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card-image\",\n          src: `https://robohash.org/${id}?set=set2`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"HoFMiWgRFj5FAF5cxsnNU+hOyLU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","emptySelected","pushToSelected","jsxDEV","_jsxDEV","Card","id","name","_s","rotateAngle","setRotateAngle","selected","store","dispatch","flipCard","allRotateCards","Array","from","document","getElementsByClassName","checkMatching","length","map","card","classList","remove","console","log","add","cardHandle","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["C:/Users/elewa/Desktop/memory game/memory/src/components/Card/Card.component.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Card.styles.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {emptySelected, pushToSelected } from '../../redux/selectedSlice';\r\n\r\n\r\nexport default function Card({id,name}) {\r\n    \r\n        \r\n    let [rotateAngle,setRotateAngle]=useState(0);\r\n\r\n\r\n    const {selected}= useSelector((store)=>  store);\r\n    const dispatch=useDispatch();\r\n\r\n    \r\n    const flipCard =()=>{\r\n        if(rotateAngle===0){\r\n            setRotateAngle(180);\r\n        }else{\r\n            setRotateAngle(0); \r\n        }\r\n        \r\n    }\r\n    const allRotateCards=()=>{\r\n        return Array.from(\r\n            document.getElementsByClassName('rotate-180')\r\n        );\r\n        \r\n    }\r\n    const checkMatching=(selected)=>{\r\n        if(selected.length ==2){\r\n           \r\n            allRotateCards.map((card)=>card.classList.remove(\"rotate-180\"))\r\n            console.log();\r\n            console.log(selected);\r\n\r\n            if(selected[0] === selected[1]){\r\n                allRotateCards.map((card)=>card.classList.add(\"display-none\"))\r\n                dispatch(emptySelected())\r\n            }else{\r\n                dispatch(emptySelected())\r\n            }\r\n            setRotateAngle(0)\r\n        }\r\n    }\r\n       \r\n    const cardHandle =(id)=>{\r\n        flipCard();\r\n        dispatch(pushToSelected(id))\r\n        checkMatching(selected)\r\n    }\r\n\r\n  return (\r\n    <div  className='card'  >\r\n    <div onClick={()=>cardHandle(id)} className={ rotateAngle===180? 'rotate-180 flip-card-inner':'rotate-0 flip-card-inner'}>\r\n\r\n        <div className=\"flip-card-front\">\r\n            <h1>hidden</h1>\r\n        </div>\r\n\r\n        <div className=\"flip-card-back\">\r\n            <img className='card-image' src={`https://robohash.org/${id}?set=set2`} />\r\n            <h4>{name}</h4>\r\n        </div>\r\n    </div>\r\n    </div>\r\n     )\r\n}\r\n        \r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}