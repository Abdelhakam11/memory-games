{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elewa\\\\Desktop\\\\projects\\\\memory-game\\\\src\\\\components\\\\Cards\\\\Cards.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Cards.styles.css';\nimport Card from '../Card/Card.component';\nimport Result from '../Result/Result.component';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addApperanceCard, incrementTotalMoves, checkBadMove } from '../../redux/movesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  let [cards, setCards] = useState([]);\n  let [end, setEnd] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    appearCards\n  } = useSelector(state => state.movesSlice);\n  useEffect(() => {\n    getCards();\n  }, []);\n\n  // fetch api and get cards\n  const getCards = async function () {\n    try {\n      const {\n        data\n      } = await axios.get('https://jsonplaceholder.typicode.com/users');\n      cardsHandle(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //use it to random cards\n  const sortRandomly = array => array.sort(() => Math.random() - 0.5);\n  const cardsHandle = cards => {\n    // limit number of shapes\n    let limitedCards = cards.slice(4);\n    //duplicate my cards\n    limitedCards.push(...limitedCards);\n    //sort my data randomly\n    let myRandomData = sortRandomly(limitedCards);\n    //store my data\n    setCards(myRandomData);\n    console.log(cards);\n  };\n\n  //logic for games\n\n  // get all elements that complete\n  const finishedCards = function () {\n    return Array.from(document.getElementsByClassName('display-none'));\n  };\n\n  // get all elements at position 180 in y direction\n  const allRotateCards = function () {\n    return Array.from(document.getElementsByClassName('rotate-180'));\n  };\n\n  //check if he complete game or no\n  const checkEndGame = function (finishedCards) {\n    if (finishedCards.length === cards.length) {\n      setEnd(true);\n    }\n  };\n\n  //flip cards \n  const flipCard = function (e, id) {\n    const layerCard = e.target.parentElement;\n    const innerCard = layerCard.parentElement;\n    const addCards = [...appearCards];\n    if (layerCard.classList.value === 'flip-card-front') {\n      addCards.push(id);\n      dispatch(addApperanceCard(addCards));\n      innerCard.classList.remove(\"rotate-0\");\n      innerCard.classList.add(\"rotate-180\");\n    } else {\n      innerCard.classList.remove(\"rotate-180\");\n      innerCard.classList.add(\"rotate-0\");\n    }\n  };\n\n  // check if the cards identical or no\n  const checkMatching = function (cards, id) {\n    if (cards.length === 2) {\n      dispatch(incrementTotalMoves());\n      if (cards[0].id === cards[1].id) {\n        cards.map(card => card.parentElement.classList.add(\"move-to-wallet\"));\n        setTimeout(function () {\n          cards.map(card => card.classList.add(\"display-none\"));\n          let finished = finishedCards();\n          checkEndGame(finished);\n        }, 800);\n      } else {\n        dispatch(checkBadMove(id));\n      }\n      setTimeout(function () {\n        cards.map(card => card.classList.remove(\"rotate-180\"));\n        cards.map(card => card.classList.add(\"rotate-0\"));\n      }, 400);\n    }\n  };\n  const cardHandle = function (e, id) {\n    flipCard(e, id);\n    let cards = allRotateCards();\n    checkMatching(cards, id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: [console.log('render'), end ? /*#__PURE__*/_jsxDEV(Result, {\n      end: end,\n      numberOfCards: cards.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-contianer\",\n        children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n          cardHandle: cardHandle,\n          index: index,\n          ...card\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Result, {\n        end: end,\n        numberOfCards: cards.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"MnzB0v91B2K8mxipWNfqHANjaMo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","Result","useDispatch","useSelector","addApperanceCard","incrementTotalMoves","checkBadMove","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","_s","cards","setCards","end","setEnd","dispatch","appearCards","state","movesSlice","getCards","data","get","cardsHandle","error","console","log","sortRandomly","array","sort","Math","random","limitedCards","slice","push","myRandomData","finishedCards","Array","from","document","getElementsByClassName","allRotateCards","checkEndGame","length","flipCard","e","id","layerCard","target","parentElement","innerCard","addCards","classList","value","remove","add","checkMatching","map","card","setTimeout","finished","cardHandle","className","children","numberOfCards","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/elewa/Desktop/projects/memory-game/src/components/Cards/Cards.component.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Cards.styles.css';\r\nimport Card from '../Card/Card.component';\r\nimport Result from '../Result/Result.component';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {  addApperanceCard, incrementTotalMoves,checkBadMove} from '../../redux/movesSlice';\r\n\r\n\r\nexport default function Cards() {\r\n    let [cards,setCards]=useState([]);\r\n    let [end,setEnd]=useState(false);\r\n    const dispatch= useDispatch()\r\n    const {appearCards} = useSelector((state) => state.movesSlice)\r\n    useEffect(()=>{\r\n        getCards()\r\n    },[])\r\n\r\n    \r\n    // fetch api and get cards\r\n    const getCards=async function () {\r\n        try{\r\n            const {data}=await axios.get('https://jsonplaceholder.typicode.com/users');\r\n            cardsHandle(data)\r\n        }catch (error) {\r\n            console.log(error);\r\n          }\r\n        \r\n    }\r\n   \r\n    //use it to random cards\r\n    const sortRandomly = (array) => array.sort(() => Math.random() - 0.5);\r\n    \r\n    const cardsHandle=(cards)=>{\r\n        // limit number of shapes\r\n        let limitedCards=cards.slice(4)\r\n        //duplicate my cards\r\n        limitedCards.push(...limitedCards)\r\n        //sort my data randomly\r\n        let myRandomData=sortRandomly(limitedCards);\r\n        //store my data\r\n        setCards(myRandomData);\r\n        console.log(cards);\r\n    }\r\n    \r\n\r\n\r\n\r\n    //logic for games\r\n  \r\n   \r\n    // get all elements that complete\r\n    const finishedCards=function (){\r\n        return Array.from(\r\n            document.getElementsByClassName('display-none')\r\n        );  \r\n    }\r\n\r\n    // get all elements at position 180 in y direction\r\n    const allRotateCards=function (){\r\n        return Array.from(\r\n            document.getElementsByClassName('rotate-180')\r\n        );  \r\n    }\r\n\r\n\r\n    //check if he complete game or no\r\n    const checkEndGame = function (finishedCards) {\r\n        if(finishedCards.length===cards.length){\r\n            setEnd(true);\r\n        }\r\n    }\r\n    \r\n    //flip cards \r\n    const flipCard= function(e,id){\r\n        const layerCard=e.target.parentElement;\r\n        const innerCard=layerCard.parentElement;\r\n        const addCards = [...appearCards]\r\n        if(layerCard.classList.value==='flip-card-front'){\r\n          addCards.push(id)\r\n          dispatch(addApperanceCard(addCards))\r\n          innerCard.classList.remove(\"rotate-0\")\r\n          innerCard.classList.add(\"rotate-180\")\r\n        }else{\r\n          innerCard.classList.remove(\"rotate-180\")\r\n          innerCard.classList.add(\"rotate-0\") \r\n        } \r\n      }\r\n\r\n    // check if the cards identical or no\r\n    const checkMatching=function (cards,id){\r\n        if(cards.length === 2){\r\n            dispatch(incrementTotalMoves())\r\n            if(cards[0].id === cards[1].id){\r\n                cards.map((card)=>card.parentElement.classList.add(\"move-to-wallet\"))\r\n                setTimeout(function(){\r\n                    cards.map((card)=>card.classList.add(\"display-none\"))\r\n                    let finished= finishedCards()\r\n                    checkEndGame(finished)\r\n                }, 800);\r\n            }else{\r\n                dispatch(checkBadMove(id))\r\n            }\r\n            setTimeout(function(){\r\n                cards.map((card)=>card.classList.remove(\"rotate-180\"))\r\n                cards.map((card)=>card.classList.add(\"rotate-0\"))\r\n            }, 400);\r\n        }\r\n    }\r\n       \r\n    const cardHandle =  function(e,id){\r\n        flipCard(e,id);\r\n        let cards=   allRotateCards();\r\n        checkMatching(cards,id)\r\n    }\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n        {console.log('render')}\r\n        {\r\n        end?\r\n        <Result end={end} numberOfCards={cards.length} />\r\n        :<>\r\n        <div className=\"card-contianer\">\r\n            {  \r\n                cards.map((card,index)=> <Card cardHandle={cardHandle} index={index} key={index} {...card} />)\r\n            }\r\n            \r\n        </div>\r\n            <div className=\"wallet-container\">\r\n                <div className='wallet'><i className=\"fa-solid fa-wallet\"></i></div>\r\n            </div>\r\n        \r\n        <Result end={end} numberOfCards={cards.length}/>\r\n        </>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}