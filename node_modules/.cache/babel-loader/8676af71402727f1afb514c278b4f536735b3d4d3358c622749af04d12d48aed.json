{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elewa\\\\Desktop\\\\memory game\\\\memory\\\\src\\\\components\\\\Cards\\\\Cards.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Cards.styles.css';\nimport Card from '../Card/Card.component';\nimport Result from '../Result/Result.component';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { flipCard, incrementTotalMoves, checkBadMove } from '../../redux/movesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  let [cards, setCards] = useState([]);\n  let [end, setEnd] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getCards();\n  }, []);\n\n  //use it to random cards\n  const sortRandomly = array => array.sort(() => Math.random() - 0.5);\n  const cardsHandle = cards => {\n    // limit number of shapes\n    let limitedCards = cards.slice(4);\n    //duplicate my cards\n    limitedCards.push(...limitedCards);\n    //sort my data randomly\n    let myRandomData = sortRandomly(limitedCards);\n    //store my data\n    setCards(myRandomData);\n  };\n  // fetch api and get \n  const getCards = async function () {\n    try {\n      const {\n        data\n      } = await axios.get('https://jsonplaceholder.typicode.com/users');\n      cardsHandle(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //logic for games\n\n  // get all elements that disappear\n  const finishedCards = function () {\n    return Array.from(document.getElementsByClassName('display-none'));\n  };\n  //check if he complete game or no\n  const checkEndGame = function (finishedCards) {\n    if (finishedCards.length === cards.length) {\n      setEnd(true);\n    }\n  };\n\n  // get all elements at position 180 in y direction\n  const allRotateCards = function () {\n    return Array.from(document.getElementsByClassName('rotate-180'));\n  };\n  const checkMatching = function (cards, id) {\n    if (cards.length === 2) {\n      dispatch(incrementTotalMoves());\n      if (cards[0].id === cards[1].id) {\n        setTimeout(function () {\n          cards.map(card => card.classList.add(\"display-none\"));\n          let finished = finishedCards();\n          checkEndGame(finished);\n        }, 500);\n      } else {\n        dispatch(checkBadMove(id));\n      }\n      setTimeout(function () {\n        cards.map(card => card.classList.remove(\"rotate-180\"));\n        cards.map(card => card.classList.add(\"rotate-0\"));\n      }, 1000);\n    }\n  };\n  const cardHandle = function (e, id) {\n    dispatch(flipCard({\n      e,\n      id\n    }));\n    let cards = allRotateCards();\n    checkMatching(cards, id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: [console.log('render'), end ? /*#__PURE__*/_jsxDEV(Result, {\n      end: end\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n        cardHandle: cardHandle,\n        index: index,\n        ...card\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 42\n      }, this)), /*#__PURE__*/_jsxDEV(Result, {\n        end: end\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"76FdfpkZfUgRTCpv+MIucd4wp/I=\", false, function () {\n  return [useDispatch];\n});\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","Result","useDispatch","useSelector","flipCard","incrementTotalMoves","checkBadMove","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","_s","cards","setCards","end","setEnd","dispatch","getCards","sortRandomly","array","sort","Math","random","cardsHandle","limitedCards","slice","push","myRandomData","data","get","error","console","log","finishedCards","Array","from","document","getElementsByClassName","checkEndGame","length","allRotateCards","checkMatching","id","setTimeout","map","card","classList","add","finished","remove","cardHandle","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/elewa/Desktop/memory game/memory/src/components/Cards/Cards.component.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Cards.styles.css';\r\nimport Card from '../Card/Card.component';\r\nimport Result from '../Result/Result.component';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {  flipCard, incrementTotalMoves,checkBadMove} from '../../redux/movesSlice';\r\n\r\n\r\nexport default function Cards() {\r\n    let [cards,setCards]=useState([]);\r\n    let [end,setEnd]=useState(false);\r\n    const dispatch= useDispatch()\r\n\r\n    useEffect(()=>{\r\n        getCards()\r\n    },[])\r\n\r\n    \r\n    \r\n   \r\n    //use it to random cards\r\n    const sortRandomly = (array) => array.sort(() => Math.random() - 0.5);\r\n    \r\n    const cardsHandle=(cards)=>{\r\n        // limit number of shapes\r\n        let limitedCards=cards.slice(4)\r\n        //duplicate my cards\r\n        limitedCards.push(...limitedCards)\r\n        //sort my data randomly\r\n        let myRandomData=sortRandomly(limitedCards);\r\n        //store my data\r\n        setCards(myRandomData);\r\n    }\r\n    // fetch api and get \r\n    const getCards=async function () {\r\n        try{\r\n            const {data}=await axios.get('https://jsonplaceholder.typicode.com/users');\r\n            cardsHandle(data)\r\n        }catch (error) {\r\n            console.log(error);\r\n          }\r\n        \r\n    }\r\n\r\n\r\n\r\n    //logic for games\r\n  \r\n   \r\n    // get all elements that disappear\r\n    const finishedCards=function (){\r\n        return Array.from(\r\n            document.getElementsByClassName('display-none')\r\n        );  \r\n    }\r\n    //check if he complete game or no\r\n    const checkEndGame = function (finishedCards) {\r\n        if(finishedCards.length===cards.length){\r\n            setEnd(true);\r\n        }\r\n    }\r\n\r\n     // get all elements at position 180 in y direction\r\n     const allRotateCards=function (){\r\n        return Array.from(\r\n            document.getElementsByClassName('rotate-180')\r\n        );  \r\n    }\r\n\r\n   \r\n    const checkMatching=function (cards,id){\r\n        if(cards.length === 2){\r\n            dispatch(incrementTotalMoves())\r\n            if(cards[0].id === cards[1].id){\r\n                setTimeout(function(){\r\n                    cards.map((card)=>card.classList.add(\"display-none\"))\r\n                    let finished= finishedCards()\r\n                    checkEndGame(finished)\r\n                }, 500);\r\n            }else{\r\n                dispatch(checkBadMove(id))\r\n            }\r\n            setTimeout(function(){\r\n                cards.map((card)=>card.classList.remove(\"rotate-180\"))\r\n                cards.map((card)=>card.classList.add(\"rotate-0\"))\r\n            }, 1000);\r\n        }\r\n    }\r\n       \r\n    const cardHandle =  function(e,id){\r\n        dispatch(flipCard({e,id}));\r\n        let cards=   allRotateCards();\r\n        checkMatching(cards,id)\r\n    }\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n        {console.log('render')}\r\n        {\r\n        end?\r\n        <Result end={end}/>\r\n        :<>\r\n            {  \r\n                cards.map((card,index)=> <Card cardHandle={cardHandle} index={index} key={index} {...card} />)\r\n            }\r\n            <Result end={end}/>\r\n        </>\r\n        }\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}