{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elewa\\\\Desktop\\\\memory game\\\\memory\\\\src\\\\components\\\\Cards\\\\Cards.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Cards.styles.css';\nimport Card from '../Card/Card.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  let [cards, setCards] = useState([]);\n  useEffect(() => {\n    getCards();\n  }, []);\n\n  //use it to random cards\n  const sortRandomly = array => array.sort(() => Math.random() - 0.5);\n  const cardsHandle = cards => {\n    // limit number of shapes\n    let limitedCards = cards.slice(4);\n    //duplicate my cards\n    limitedCards.push(...limitedCards);\n    //sort my data randomly\n    let myRandomData = sortRandomly(limitedCards);\n    //store my data\n    setCards(myRandomData);\n  };\n  const getCards = async function () {\n    try {\n      const {\n        data\n      } = await axios.get('https://jsonplaceholder.typicode.com/users');\n      cardsHandle(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const flipCard = function (rotateAngle) {\n    if (rotateAngle == 180) {\n      rotateAngle = 0;\n    } else {\n      rotateAngle = 180;\n    }\n  };\n  const allRotateCards = function () {\n    return Array.from(document.getElementsByClassName('rotate-180'));\n  };\n  const checkMatching = function (cards) {\n    console.log(cards.length);\n    if (cards.length == 2) {\n      if (cards[0].id == cards[1].id) {\n        setInterval(function () {\n          cards.map(card => card.classList.add(\"rotate-0\"));\n          cards.map(card => card.classList.add(\"display-none\"));\n        }, 200);\n      }\n      setInterval(function () {\n        cards.map(card => card.classList.add(\"rotate-0\"));\n        cards.map(card => card.classList.remove(\"rotate-180\"));\n      }, 1000);\n    }\n  };\n  const cardHandle = async function (rotateAngle) {\n    await flipCard(rotateAngle);\n    let cards = allRotateCards();\n    checkMatching(cards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n      cardHandle: cardHandle,\n      ...card,\n      rotateAngle: rotateAngle\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 38\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"mrCWdHvCaUiuDWPDa/9VjhNDyNs=\");\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","jsxDEV","_jsxDEV","Cards","_s","cards","setCards","getCards","sortRandomly","array","sort","Math","random","cardsHandle","limitedCards","slice","push","myRandomData","data","get","error","console","log","flipCard","rotateAngle","allRotateCards","Array","from","document","getElementsByClassName","checkMatching","length","id","setInterval","map","card","classList","add","remove","cardHandle","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elewa/Desktop/memory game/memory/src/components/Cards/Cards.component.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Cards.styles.css';\r\nimport Card from '../Card/Card.component';\r\n\r\n\r\nexport default function Cards() {\r\n    let [cards,setCards]=useState([]);\r\n    \r\n\r\n    useEffect(()=>{\r\n        getCards()\r\n    },[])\r\n    \r\n\r\n    //use it to random cards\r\n    const sortRandomly = (array) => array.sort(() => Math.random() - 0.5);\r\n    \r\n    const cardsHandle=(cards)=>{\r\n        // limit number of shapes\r\n        let limitedCards=cards.slice(4)\r\n        //duplicate my cards\r\n        limitedCards.push(...limitedCards)\r\n        //sort my data randomly\r\n        let myRandomData=sortRandomly(limitedCards);\r\n        //store my data\r\n        setCards(myRandomData);\r\n    }\r\n    const getCards=async function () {\r\n        try{\r\n            const {data}=await axios.get('https://jsonplaceholder.typicode.com/users');\r\n            cardsHandle(data)\r\n        }catch (error) {\r\n            console.log(error);\r\n          }\r\n        \r\n    }\r\n\r\n\r\n    const flipCard = function (rotateAngle){\r\n        if(rotateAngle==180){\r\n            rotateAngle=0;\r\n        }else{\r\n            rotateAngle=180; \r\n        }\r\n        \r\n    }\r\n    const allRotateCards=function (){\r\n        return Array.from(\r\n            document.getElementsByClassName('rotate-180')\r\n        );\r\n        \r\n    }\r\n    const checkMatching=function (cards){\r\n        console.log(cards.length);\r\n        if(cards.length == 2){\r\n            if(cards[0].id == cards[1].id){\r\n                setInterval(function(){\r\n                    cards.map((card)=>card.classList.add(\"rotate-0\"))\r\n                    cards.map((card)=>card.classList.add(\"display-none\"))\r\n                }, 200);\r\n            }\r\n            setInterval(function(){\r\n                cards.map((card)=>card.classList.add(\"rotate-0\"))\r\n                cards.map((card)=>card.classList.remove(\"rotate-180\"))\r\n            }, 1000);\r\n        }\r\n    }\r\n       \r\n    const cardHandle =async function(rotateAngle){\r\n        await flipCard(rotateAngle);\r\n        let cards=  allRotateCards();\r\n        checkMatching(cards)\r\n        \r\n    }\r\n\r\n    \r\n  return (\r\n    <div className=\"cards\">\r\n        {\r\n            cards.map((card,index)=> <Card cardHandle={cardHandle} key={index} {...card} rotateAngle={rotateAngle} />)\r\n        }\r\n        \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,OAAOC,IAAI,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,IAAI,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAGjCD,SAAS,CAAC,MAAI;IACVU,QAAQ,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;;EAGL;EACA,MAAMC,YAAY,GAAIC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EAErE,MAAMC,WAAW,GAAER,KAAK,IAAG;IACvB;IACA,IAAIS,YAAY,GAACT,KAAK,CAACU,KAAK,CAAC,CAAC,CAAC;IAC/B;IACAD,YAAY,CAACE,IAAI,CAAC,GAAGF,YAAY,CAAC;IAClC;IACA,IAAIG,YAAY,GAACT,YAAY,CAACM,YAAY,CAAC;IAC3C;IACAR,QAAQ,CAACW,YAAY,CAAC;EAC1B,CAAC;EACD,MAAMV,QAAQ,GAAC,eAAAA,CAAA,EAAkB;IAC7B,IAAG;MACC,MAAM;QAACW;MAAI,CAAC,GAAC,MAAMnB,KAAK,CAACoB,GAAG,CAAC,4CAA4C,CAAC;MAC1EN,WAAW,CAACK,IAAI,CAAC;IACrB,CAAC,QAAOE,KAAK,EAAE;MACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EAEN,CAAC;EAGD,MAAMG,QAAQ,GAAG,SAAAA,CAAUC,WAAW,EAAC;IACnC,IAAGA,WAAW,IAAE,GAAG,EAAC;MAChBA,WAAW,GAAC,CAAC;IACjB,CAAC,MAAI;MACDA,WAAW,GAAC,GAAG;IACnB;EAEJ,CAAC;EACD,MAAMC,cAAc,GAAC,SAAAA,CAAA,EAAW;IAC5B,OAAOC,KAAK,CAACC,IAAI,CACbC,QAAQ,CAACC,sBAAsB,CAAC,YAAY,CAChD,CAAC;EAEL,CAAC;EACD,MAAMC,aAAa,GAAC,SAAAA,CAAUzB,KAAK,EAAC;IAChCgB,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC0B,MAAM,CAAC;IACzB,IAAG1B,KAAK,CAAC0B,MAAM,IAAI,CAAC,EAAC;MACjB,IAAG1B,KAAK,CAAC,CAAC,CAAC,CAAC2B,EAAE,IAAI3B,KAAK,CAAC,CAAC,CAAC,CAAC2B,EAAE,EAAC;QAC1BC,WAAW,CAAC,YAAU;UAClB5B,KAAK,CAAC6B,GAAG,CAAEC,IAAI,IAAGA,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC;UACjDhC,KAAK,CAAC6B,GAAG,CAAEC,IAAI,IAAGA,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC,CAAC;QACzD,CAAC,EAAE,GAAG,CAAC;MACX;MACAJ,WAAW,CAAC,YAAU;QAClB5B,KAAK,CAAC6B,GAAG,CAAEC,IAAI,IAAGA,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC;QACjDhC,KAAK,CAAC6B,GAAG,CAAEC,IAAI,IAAGA,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC,CAAC;MAC1D,CAAC,EAAE,IAAI,CAAC;IACZ;EACJ,CAAC;EAED,MAAMC,UAAU,GAAE,eAAAA,CAAef,WAAW,EAAC;IACzC,MAAMD,QAAQ,CAACC,WAAW,CAAC;IAC3B,IAAInB,KAAK,GAAGoB,cAAc,CAAC,CAAC;IAC5BK,aAAa,CAACzB,KAAK,CAAC;EAExB,CAAC;EAGH,oBACEH,OAAA;IAAKsC,SAAS,EAAC,OAAO;IAAAC,QAAA,EAEdpC,KAAK,CAAC6B,GAAG,CAAC,CAACC,IAAI,EAACO,KAAK,kBAAIxC,OAAA,CAACF,IAAI;MAACuC,UAAU,EAAEA,UAAW;MAAA,GAAiBJ,IAAI;MAAEX,WAAW,EAAEA;IAAY,GAA1CkB,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuC,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG7G,CAAC;AAEV;AAAC1C,EAAA,CA/EuBD,KAAK;AAAA4C,EAAA,GAAL5C,KAAK;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}