{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elewa\\\\Desktop\\\\memory game\\\\memory\\\\src\\\\components\\\\Cards\\\\Cards.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Cards.styles.css';\nimport Card from '../Card/Card.component';\nimport Result from '../Result/Result.component';\nimport { useDispatch } from 'react-redux';\nimport { incrementTotalMoves } from '../../redux/movesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards() {\n  _s();\n  let [cards, setCards] = useState([]);\n  let [completeCards, setCompleteCards] = useState([]);\n  useEffect(() => {\n    getCards();\n  }, []);\n  const allCompleteCards = function () {\n    return Array.from(document.getElementsByClassName('display-none'));\n  };\n  console.log(allCompleteCards());\n\n  //use it to random cards\n  const sortRandomly = array => array.sort(() => Math.random() - 0.5);\n  const cardsHandle = cards => {\n    // limit number of shapes\n    let limitedCards = cards.slice(4);\n    //duplicate my cards\n    limitedCards.push(...limitedCards);\n    //sort my data randomly\n    let myRandomData = sortRandomly(limitedCards);\n    //store my data\n    setCards(myRandomData);\n  };\n  const getCards = async function () {\n    try {\n      const {\n        data\n      } = await axios.get('https://jsonplaceholder.typicode.com/users');\n      cardsHandle(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //logic for games\n\n  const dispatch = useDispatch();\n  //check card position and rotate it\n  const flipCard = function (e) {\n    const layerCard = e.target.parentElement;\n    const innerCard = layerCard.parentElement;\n    if (layerCard.classList.value === 'flip-card-front') {\n      if (innerCard.classList.contains('rotate-360')) {\n        innerCard.classList.remove(\"rotate-360\");\n      } else {\n        innerCard.classList.remove(\"rotate-0\");\n      }\n      innerCard.classList.add(\"rotate-180\");\n    } else {\n      innerCard.classList.remove(\"rotate-180\");\n      innerCard.classList.add(\"rotate-360\");\n    }\n  };\n\n  // get all elements at position 180 in y direction\n  const allRotateCards = function () {\n    return Array.from(document.getElementsByClassName('rotate-180'));\n  };\n  const checkMatching = function (cards) {\n    if (cards.length === 2) {\n      dispatch(incrementTotalMoves());\n      if (cards[0].id === cards[1].id) {\n        setTimeout(function () {\n          let copyArray = [...completeCards];\n          copy;\n          cards.map(card => card.classList.add(\"display-none\"));\n        }, 500);\n      }\n      setTimeout(function () {\n        cards.map(card => card.classList.remove(\"rotate-180\"));\n        cards.map(card => card.classList.add(\"rotate-360\"));\n      }, 1000);\n    }\n  };\n  const cardHandle = function (e) {\n    flipCard(e);\n    let cards = allRotateCards();\n    checkMatching(cards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: [console.log('render'), cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n      cardHandle: cardHandle,\n      index: index,\n      ...card\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 38\n    }, this)), /*#__PURE__*/_jsxDEV(Result, {\n      cardsNumber: cards.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"75DgNhf3h3mlb43EFqunMRcGLzg=\", false, function () {\n  return [useDispatch];\n});\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","Result","useDispatch","incrementTotalMoves","jsxDEV","_jsxDEV","Cards","_s","cards","setCards","completeCards","setCompleteCards","getCards","allCompleteCards","Array","from","document","getElementsByClassName","console","log","sortRandomly","array","sort","Math","random","cardsHandle","limitedCards","slice","push","myRandomData","data","get","error","dispatch","flipCard","e","layerCard","target","parentElement","innerCard","classList","value","contains","remove","add","allRotateCards","checkMatching","length","id","setTimeout","copyArray","copy","map","card","cardHandle","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","cardsNumber","_c","$RefreshReg$"],"sources":["C:/Users/elewa/Desktop/memory game/memory/src/components/Cards/Cards.component.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Cards.styles.css';\r\nimport Card from '../Card/Card.component';\r\nimport Result from '../Result/Result.component';\r\nimport { useDispatch } from 'react-redux'\r\nimport {  incrementTotalMoves} from '../../redux/movesSlice';\r\n\r\n\r\n\r\nexport default function Cards() {\r\n    let [cards,setCards]=useState([]);\r\n    let [completeCards,setCompleteCards]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        getCards()\r\n    },[])\r\n    \r\n    const allCompleteCards=function (){\r\n        return Array.from(\r\n            document.getElementsByClassName('display-none')\r\n        );  \r\n    }\r\n    console.log(allCompleteCards());\r\n\r\n    //use it to random cards\r\n    const sortRandomly = (array) => array.sort(() => Math.random() - 0.5);\r\n    \r\n    const cardsHandle=(cards)=>{\r\n        // limit number of shapes\r\n        let limitedCards=cards.slice(4)\r\n        //duplicate my cards\r\n        limitedCards.push(...limitedCards)\r\n        //sort my data randomly\r\n        let myRandomData=sortRandomly(limitedCards);\r\n        //store my data\r\n        setCards(myRandomData);\r\n    }\r\n    const getCards=async function () {\r\n        try{\r\n            const {data}=await axios.get('https://jsonplaceholder.typicode.com/users');\r\n            cardsHandle(data)\r\n        }catch (error) {\r\n            console.log(error);\r\n          }\r\n        \r\n    }\r\n\r\n\r\n    //logic for games\r\n  \r\n    const dispatch= useDispatch()\r\n    //check card position and rotate it\r\n    const flipCard = function (e){\r\n        \r\n        const layerCard=e.target.parentElement;\r\n        const innerCard=layerCard.parentElement;\r\n\r\n        if(layerCard.classList.value==='flip-card-front'){\r\n            if(innerCard.classList.contains('rotate-360')){\r\n                innerCard.classList.remove(\"rotate-360\")\r\n            }else{\r\n                innerCard.classList.remove(\"rotate-0\")\r\n            }\r\n            innerCard.classList.add(\"rotate-180\")\r\n        }else{\r\n            innerCard.classList.remove(\"rotate-180\")\r\n            innerCard.classList.add(\"rotate-360\") \r\n        }\r\n        \r\n    }\r\n    \r\n    // get all elements at position 180 in y direction\r\n    const allRotateCards=function (){\r\n        return Array.from(\r\n            document.getElementsByClassName('rotate-180')\r\n        );  \r\n    }\r\n    \r\n    const checkMatching=function (cards){\r\n        if(cards.length === 2){\r\n            dispatch(incrementTotalMoves())\r\n            if(cards[0].id === cards[1].id){\r\n                setTimeout(function(){\r\n                    let copyArray=[...completeCards];\r\n                    copy\r\n                    cards.map((card)=>card.classList.add(\"display-none\"))\r\n                }, 500);\r\n            }\r\n\r\n            setTimeout(function(){\r\n                cards.map((card)=>card.classList.remove(\"rotate-180\"))\r\n                cards.map((card)=>card.classList.add(\"rotate-360\"))\r\n            }, 1000);\r\n        }\r\n    }\r\n       \r\n    const cardHandle =  function(e){\r\n        flipCard(e);\r\n        let cards=   allRotateCards();\r\n        checkMatching(cards)\r\n    }\r\n  return (\r\n    <div className=\"cards\">\r\n        {console.log('render')}\r\n        \r\n        { \r\n            cards.map((card,index)=> <Card cardHandle={cardHandle} index={index} key={index} {...card} />)\r\n        }\r\n        <Result cardsNumber={cards.length} />\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAC3B,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAUC,mBAAmB,QAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI7D,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,IAAI,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EACjC,IAAI,CAACY,aAAa,EAACC,gBAAgB,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EAEjDD,SAAS,CAAC,MAAI;IACVe,QAAQ,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMC,gBAAgB,GAAC,SAAAA,CAAA,EAAW;IAC9B,OAAOC,KAAK,CAACC,IAAI,CACbC,QAAQ,CAACC,sBAAsB,CAAC,cAAc,CAClD,CAAC;EACL,CAAC;EACDC,OAAO,CAACC,GAAG,CAACN,gBAAgB,CAAC,CAAC,CAAC;;EAE/B;EACA,MAAMO,YAAY,GAAIC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EAErE,MAAMC,WAAW,GAAEjB,KAAK,IAAG;IACvB;IACA,IAAIkB,YAAY,GAAClB,KAAK,CAACmB,KAAK,CAAC,CAAC,CAAC;IAC/B;IACAD,YAAY,CAACE,IAAI,CAAC,GAAGF,YAAY,CAAC;IAClC;IACA,IAAIG,YAAY,GAACT,YAAY,CAACM,YAAY,CAAC;IAC3C;IACAjB,QAAQ,CAACoB,YAAY,CAAC;EAC1B,CAAC;EACD,MAAMjB,QAAQ,GAAC,eAAAA,CAAA,EAAkB;IAC7B,IAAG;MACC,MAAM;QAACkB;MAAI,CAAC,GAAC,MAAM/B,KAAK,CAACgC,GAAG,CAAC,4CAA4C,CAAC;MAC1EN,WAAW,CAACK,IAAI,CAAC;IACrB,CAAC,QAAOE,KAAK,EAAE;MACXd,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;IACpB;EAEN,CAAC;;EAGD;;EAEA,MAAMC,QAAQ,GAAE/B,WAAW,CAAC,CAAC;EAC7B;EACA,MAAMgC,QAAQ,GAAG,SAAAA,CAAUC,CAAC,EAAC;IAEzB,MAAMC,SAAS,GAACD,CAAC,CAACE,MAAM,CAACC,aAAa;IACtC,MAAMC,SAAS,GAACH,SAAS,CAACE,aAAa;IAEvC,IAAGF,SAAS,CAACI,SAAS,CAACC,KAAK,KAAG,iBAAiB,EAAC;MAC7C,IAAGF,SAAS,CAACC,SAAS,CAACE,QAAQ,CAAC,YAAY,CAAC,EAAC;QAC1CH,SAAS,CAACC,SAAS,CAACG,MAAM,CAAC,YAAY,CAAC;MAC5C,CAAC,MAAI;QACDJ,SAAS,CAACC,SAAS,CAACG,MAAM,CAAC,UAAU,CAAC;MAC1C;MACAJ,SAAS,CAACC,SAAS,CAACI,GAAG,CAAC,YAAY,CAAC;IACzC,CAAC,MAAI;MACDL,SAAS,CAACC,SAAS,CAACG,MAAM,CAAC,YAAY,CAAC;MACxCJ,SAAS,CAACC,SAAS,CAACI,GAAG,CAAC,YAAY,CAAC;IACzC;EAEJ,CAAC;;EAED;EACA,MAAMC,cAAc,GAAC,SAAAA,CAAA,EAAW;IAC5B,OAAO/B,KAAK,CAACC,IAAI,CACbC,QAAQ,CAACC,sBAAsB,CAAC,YAAY,CAChD,CAAC;EACL,CAAC;EAED,MAAM6B,aAAa,GAAC,SAAAA,CAAUtC,KAAK,EAAC;IAChC,IAAGA,KAAK,CAACuC,MAAM,KAAK,CAAC,EAAC;MAClBd,QAAQ,CAAC9B,mBAAmB,CAAC,CAAC,CAAC;MAC/B,IAAGK,KAAK,CAAC,CAAC,CAAC,CAACwC,EAAE,KAAKxC,KAAK,CAAC,CAAC,CAAC,CAACwC,EAAE,EAAC;QAC3BC,UAAU,CAAC,YAAU;UACjB,IAAIC,SAAS,GAAC,CAAC,GAAGxC,aAAa,CAAC;UAChCyC,IAAI;UACJ3C,KAAK,CAAC4C,GAAG,CAAEC,IAAI,IAAGA,IAAI,CAACb,SAAS,CAACI,GAAG,CAAC,cAAc,CAAC,CAAC;QACzD,CAAC,EAAE,GAAG,CAAC;MACX;MAEAK,UAAU,CAAC,YAAU;QACjBzC,KAAK,CAAC4C,GAAG,CAAEC,IAAI,IAAGA,IAAI,CAACb,SAAS,CAACG,MAAM,CAAC,YAAY,CAAC,CAAC;QACtDnC,KAAK,CAAC4C,GAAG,CAAEC,IAAI,IAAGA,IAAI,CAACb,SAAS,CAACI,GAAG,CAAC,YAAY,CAAC,CAAC;MACvD,CAAC,EAAE,IAAI,CAAC;IACZ;EACJ,CAAC;EAED,MAAMU,UAAU,GAAI,SAAAA,CAASnB,CAAC,EAAC;IAC3BD,QAAQ,CAACC,CAAC,CAAC;IACX,IAAI3B,KAAK,GAAIqC,cAAc,CAAC,CAAC;IAC7BC,aAAa,CAACtC,KAAK,CAAC;EACxB,CAAC;EACH,oBACEH,OAAA;IAAKkD,SAAS,EAAC,OAAO;IAAAC,QAAA,GACjBtC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,EAGlBX,KAAK,CAAC4C,GAAG,CAAC,CAACC,IAAI,EAACI,KAAK,kBAAIpD,OAAA,CAACL,IAAI;MAACsD,UAAU,EAAEA,UAAW;MAACG,KAAK,EAAEA,KAAM;MAAA,GAAiBJ;IAAI,GAAfI,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,CAAC,eAElGxD,OAAA,CAACJ,MAAM;MAAC6D,WAAW,EAAEtD,KAAK,CAACuC;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV;AAACtD,EAAA,CAtGuBD,KAAK;EAAA,QAyCTJ,WAAW;AAAA;AAAA6D,EAAA,GAzCPzD,KAAK;AAAA,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}